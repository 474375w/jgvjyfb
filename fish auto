local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local CONFIG = {
    CAST_POWER = 100,
    REEL_ATTEMPTS = 256,
    RETRY_DELAY = 1,
    MAX_DISTANCE = 100,
    RAY_STEP = 1,
}

local initialPosition
local heartbeatConnection
local soundConnection
local lastCastTime = 0

local function fireReelFinished()
    for _ = 1, CONFIG.REEL_ATTEMPTS do
        task.spawn(function()
            ReplicatedStorage.events.reelfinished:FireServer(1000, true)
        end)
    end
end

local function isPointVisible(origin, target)
    local direction = (target - origin).Unit
    local distance = (target - origin).Magnitude
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {Players.LocalPlayer.Character, workspace.zones.fishing}
    local result = workspace:Raycast(origin, direction * distance, raycastParams)
    return result == nil
end

local function getNearestWaterPoint()
    local character = Players.LocalPlayer.Character
    if not character then return end
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    local nearestPoint
    local shortestDistance = math.huge
    local characterPosition = humanoidRootPart.Position
    for _, part in pairs(workspace.zones.fishing:GetChildren()) do
        local size = part.Size
        local corners = {
            part.Position + Vector3.new(size.X/2, 0, size.Z/2),
            part.Position + Vector3.new(-size.X/2, 0, size.Z/2),
            part.Position + Vector3.new(size.X/2, 0, -size.Z/2),
            part.Position + Vector3.new(-size.X/2, 0, -size.Z/2),
            part.Position,
        }
        for _, corner in ipairs(corners) do
            local distance = (corner - characterPosition).Magnitude
            if distance < shortestDistance and isPointVisible(characterPosition, corner) then
                shortestDistance = distance
                nearestPoint = corner
            end
        end
    end
    return nearestPoint
end

local function faceWater()
    local character = Players.LocalPlayer.Character
    if not character then return end
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    local waterPoint = getNearestWaterPoint()
    if not waterPoint then return end
    if not initialPosition then
        initialPosition = humanoidRootPart.Position
    end
    local lookVector = (waterPoint - humanoidRootPart.Position).Unit
    humanoidRootPart.CFrame = CFrame.new(
        initialPosition,
        initialPosition + Vector3.new(lookVector.X, 0, lookVector.Z)
    )
end

local function getFishingRod()
    local character = Players.LocalPlayer.Character
    if not character then return end
    for _, tool in pairs(character:GetChildren()) do
        if tool:FindFirstChild("events") and tool:FindFirstChild("events"):FindFirstChild("cast") then
            return tool
        end
    end
end

local function castRod()
    local rod = getFishingRod()
    if rod and tick() - lastCastTime > CONFIG.RETRY_DELAY then
        lastCastTime = tick()
        rod.events.cast:FireServer(CONFIG.CAST_POWER)
        return true
    end
    return false
end

local function setupSoundListener()
    local playerGui = Players.LocalPlayer:WaitForChild("PlayerGui")
    if soundConnection then
        soundConnection:Disconnect()
    end
    soundConnection = playerGui.DescendantAdded:Connect(function(descendant)
        if descendant:IsA("Sound") and descendant.Name == "popup" then
            fireReelFinished()
            local ancestryConnection
            ancestryConnection = descendant.AncestryChanged:Connect(function(_, parent)
                if not parent then
                    fireReelFinished()
                    task.wait(CONFIG.RETRY_DELAY)
                    if getFishingRod() then
                        faceWater()
                        castRod()
                    end
                    ancestryConnection:Disconnect()
                end
            end)
        end
    end)
end

local function onHeartbeat()
    local character = Players.LocalPlayer.Character
    if not character then return end
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    local rod = getFishingRod()
    if not rod then
        initialPosition = nil
        return
    end
    if not initialPosition then
        initialPosition = humanoidRootPart.Position
        faceWater()
        task.wait(0.5)
        castRod()
    else
        local currentLook = humanoidRootPart.CFrame.LookVector
        humanoidRootPart.CFrame = CFrame.new(
            initialPosition,
            initialPosition + currentLook
        )
    end
end

do
    if heartbeatConnection then
        heartbeatConnection:Disconnect()
    end
    setupSoundListener()
    heartbeatConnection = RunService.Heartbeat:Connect(onHeartbeat)
end
